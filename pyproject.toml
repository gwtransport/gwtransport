[build-system]
requires = ["hatchling >= 1.26"]
build-backend = "hatchling.build"

[project]
name = "gwtransport"
description = "Timeseries analysis for groundwater transport of solutes and heat"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.11"
keywords = [
  "analysis",
  "aquifer",
  "bank-filtration",
  "contaminant",
  "groundwater",
  "hydrology",
  "pathogen-removal",
  "residence-time",
  "temperature",
  "time-series",
  "transport",
  "water-treatment",
]
authors = [
  { name = "Bas des Tombe"},
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: GNU Affero General Public License v3",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Hydrology",
  "Topic :: Scientific/Engineering :: Physics",
]
dependencies = [
  "ipykernel>=4.0.1",
  "matplotlib>=3.8.4",
  "numpy>=2.0.0",
  "pandas>=2.2.2",
  "requests>=2.19.0",
  "scipy>=1.13.0",
]
version = "0.19.0"
[project.optional-dependencies]
test = [
  "nbconvert>=7.1.0",
  "nbformat>=5.0.2",
  "pytest>=6.2.5",
  "pytest-cov>=2.3.1",
  "pytest-xdist>=1.28.0",
  "ruff==0.13.2",
  "ty",
  "validate-pyproject[all,store]",
]
docs = [
  "jupyter",
  "nbsphinx",
  "nbsphinx-link",
  "sphinx>=7.0",
  "sphinx-autodoc-typehints",
  "sphinx-book-theme>=1.0.0",
  "sphinx-copybutton",
  "sphinxext-opengraph[social_cards]",
]

[project.urls]
Homepage = "https://github.com/gwtransport/gwtransport"

[tool.hatch.envs.hatch-static-analysis]
config-path = "ruff.toml"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "-n=auto",
    "--doctest-modules",
]
filterwarnings = [
    "ignore:.*Jupyter is migrating.*:DeprecationWarning",
]

[tool.coverage.run]
concurrency = ["multiprocessing"]
parallel = true
sigterm = true

[tool.coverage.report]
exclude_lines = [
    "def __repr__",
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
]
